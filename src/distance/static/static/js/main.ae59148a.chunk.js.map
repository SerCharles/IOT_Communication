{"version":3,"sources":["requests.ts","App.tsx","index.tsx"],"names":["commonErrorObject","success","error_code","message","dumpFromFailureMessage","json","createResultFromJsonResponse","response","map","a","data","serverStatus","fetch","serverFileReset","useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","paper","margin","borderRadius","header","padding","borderColor","palette","divider","borderWidth","borderStyle","display","justifyContent","alignItems","content","progress","flexDirection","whiteSpace","color","green","orange","red","columnGap","exception","statusBar","ProgressView","props","classes","process","processing","failed","status","className","clsx","Typography","variant","component","result","distance","toFixed","ListItem","button","filename","moment","time","format","b","Fragment","ta1","ta3","tb1","tb3","StatusPanel","React","useState","refresh","setRefresh","setStatus","setException","useEffect","then","server_state","reverse","timer","setTimeout","clearTimeout","statusContainer","files","Button","onClick","length","List","value","index","Divider","Paper","IconButton","Refresh","App","AppBar","position","Toolbar","Container","maxWidth","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae59148a.chunk.js","sourcesContent":["export type FailureObject = { \"success\": false, \"error_code\": number, \"message\": string };\n\nexport type Result<T> = { \"success\": true, \"data\": T } | FailureObject;\n\nconst commonErrorObject: FailureObject = {success: false, error_code: -1, message: \"网络异常\"};\n\ninterface ServerFile {\n    \"filename\": string,\n    \"size\": number,\n    \"time\": number,\n}\n\nexport interface Process {\n    \"processing\": boolean,\n    \"success\": boolean,\n    \"result\"?: {\n        \"distance\": number,\n        \"ta1\"?: number,\n        \"ta3\"?: number,\n        \"tb1\"?: number,\n        \"tb3\"?: number\n    },\n    \"a\": ServerFile,\n    \"b\": ServerFile,\n}\n\nexport interface ServerStatus {\n    \"files\": {\n        \"a\"?: ServerFile,\n        \"b\"?: ServerFile,\n    }\n    \"server_state\": {\n        \"process\": Process[];\n    }\n}\n\nfunction dumpFromFailureMessage(json: any): FailureObject {\n    return {\n        success: false,\n        error_code: json.error_code || \"-1\",\n        message: json.message || \"unknown error\",\n    }\n}\n\nexport async function createResultFromJsonResponse<T>(response: Response, map: (json: any) => T): Promise<Result<T>> {\n    try {\n        let json = await response.json();\n        if (json.success) {\n            return {\n                success: true,\n                data: map(json),\n            }\n        } else {\n            return dumpFromFailureMessage(json);\n        }\n    } catch (e) {\n        return commonErrorObject;\n    }\n}\n\nexport const serverStatus = async () => {\n    try {\n        let response = await fetch(\"/distance/status\");\n        return await createResultFromJsonResponse<ServerStatus>(response, json => json['data']);\n    } catch (e) {\n        return commonErrorObject;\n    }\n}\n\nexport const serverFileReset = async () => {\n    try {\n        let response = await fetch(\"/distance/reset\");\n        return await createResultFromJsonResponse<null>(response, json => null);\n    } catch (e) {\n        return commonErrorObject;\n    }\n}\n","import React from 'react';\nimport {\n    AppBar, Button,\n    Container,\n    createStyles, Divider,\n    IconButton, List, ListItem,\n    makeStyles,\n    Paper,\n    Theme,\n    Toolbar,\n    Typography\n} from \"@material-ui/core\";\nimport {Refresh} from \"@material-ui/icons\";\nimport {FailureObject, Process, serverFileReset, serverStatus, ServerStatus} from \"./requests\";\nimport {green, orange, red} from \"@material-ui/core/colors\";\nimport clsx from \"clsx\";\nimport moment from 'moment';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n        title: {\n            flexGrow: 1,\n        },\n        paper: {\n            margin: theme.spacing(2),\n            borderRadius: theme.spacing(2),\n        },\n        header: {\n            padding: theme.spacing(0.5, 2),\n            borderColor: theme.palette.divider,\n            borderWidth: \"0 0 1px 0\",\n            borderStyle: \"solid\",\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n        },\n        content: {\n            padding: theme.spacing(1, 0),\n        },\n        progress: {\n            padding: theme.spacing(0.5, 2),\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"stretch\",\n            whiteSpace: \"nowrap\",\n            \"& .status\": {\n                display: \"flex\",\n                justifyContent: \"space-between\",\n            },\n            \"& .status-success\": {\n                color: green[\"700\"],\n            },\n            \"& .status-processing\": {\n                color: orange[\"700\"],\n            },\n            \"& .status-failed\": {\n                color: red[\"700\"],\n            },\n            \"& .files\": {},\n            \"& .result\": {},\n            columnGap: theme.spacing(1),\n        },\n        exception: {\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            margin: theme.spacing(4, 4),\n        },\n        statusBar: {\n            padding: theme.spacing(0.5, 2),\n            alignItems: \"center\",\n            display: \"flex\",\n            justifyContent: \"space-between\",\n        }\n    }),\n);\n\nfunction ProgressView(props: { process: Process }) {\n    const classes = useStyles();\n    const {process} = props;\n    const success = (!process.processing && process.success);\n    const failed = (!process.processing && !process.success);\n    const status = (<div className={clsx(\"status\", process.processing && \"status-processing\",\n        success && \"status-success\",\n        failed && \"status-failed\")}>\n        <Typography variant=\"h6\"\n                    component=\"span\">{process.processing ? \"正在计算\" : (process.success ? \"已完成\" : \"计算错误\")}</Typography>\n        <Typography variant=\"h6\" component=\"span\">\n            {success && process.result ? (process.result.distance.toFixed(4) + \"m\") : \"\"}\n        </Typography>\n    </div>);\n    return (<ListItem className={classes.progress} button>\n        {status}\n        <div className=\"files\">\n            <Typography variant=\"body1\">a: {process.a.filename}</Typography>\n            <Typography variant=\"body2\">{moment(process.a.time * 1000).format(\"YYYY-MM-DD HH:mm:ss\")}</Typography>\n            <Typography variant=\"body1\">b: {process.b.filename}</Typography>\n            <Typography variant=\"body2\">{moment(process.b.time * 1000).format(\"YYYY-MM-DD HH:mm:ss\")}</Typography>\n            {\n                process.result ? (<React.Fragment>\n                        <Typography variant=\"body1\">\n                            ta1: {process.result.ta1?.toFixed(4)}s ta3: {process.result.ta3?.toFixed(4)}s\n                        </Typography>\n                        <Typography variant=\"body1\">\n                            tb1: {process.result.tb1?.toFixed(4)}s tb3: {process.result.tb3?.toFixed(4)}s\n                        </Typography>\n                    </React.Fragment>\n                ) : null\n            }\n        </div>\n\n    </ListItem>);\n}\n\nfunction StatusPanel() {\n    const classes = useStyles();\n    const [refresh, setRefresh] = React.useState(false);\n    const [status, setStatus] = React.useState(null as ServerStatus | null);\n    const [exception, setException] = React.useState(null as FailureObject | null);\n    React.useEffect(() => {\n        serverStatus().then((result) => {\n            if (result.success) {\n                result.data.server_state.process.reverse();\n                setStatus(result.data);\n                setException(null);\n            } else {\n                setStatus(null);\n                setException(result);\n            }\n        });\n        const timer = setTimeout(() => setRefresh(!refresh), 500);\n        return () => clearTimeout(timer);\n    }, [refresh]);\n    const reset = () => {\n        serverFileReset().then(() => {\n            setRefresh(!refresh);\n        });\n    };\n    const statusContainer = exception ? (\n        <Typography variant=\"body1\" className={classes.exception}>网络请求出现异常: {exception.message}</Typography>\n    ) : (status ? (\n        <React.Fragment>\n            <div className={classes.statusBar}>\n                <Typography variant=\"h6\" color=\"textPrimary\">\n                    状态：\n                    {(() => {\n                        if (!status.files.a && !status.files.b) {\n                            return \"等待客户端上传音频\";\n                        } else if (status.files.a && !status.files.b) {\n                            return \"A 已上传，等待 B 上传\";\n                        } else if (!status.files.a && status.files.b) {\n                            return \"B 已上传，等待 A 上传\";\n                        } else {\n                            return \"A、B 均已上传，等待处理\";\n                        }\n                    })()}\n                </Typography>\n                <Button variant=\"outlined\" color=\"primary\" onClick={() => reset()}>重置</Button>\n            </div>\n            {\n                status.server_state.process.length > 0 ? (<List>\n                    {\n                        status.server_state.process.map((value, index) => (\n                            <React.Fragment key={index}>\n                                <Divider/>\n                                <ProgressView process={value}/>\n                            </React.Fragment>\n                        ))\n                    }\n                    <Divider/>\n                </List>) : (\n                    <Typography variant=\"body1\" className={classes.exception}>暂无任务</Typography>\n                )\n            }\n        </React.Fragment>\n    ) : (\n        <Typography variant=\"body1\" className={classes.exception}>正在加载中</Typography>\n    ));\n    return <Paper className={classes.paper}>\n        <div className={classes.header}>\n            <Typography variant=\"h6\" component=\"span\">\n                测距服务器\n            </Typography>\n            <IconButton onClick={() => setRefresh(!refresh)}>\n                <Refresh/>\n            </IconButton>\n        </div>\n        <div className={classes.content}>\n            {statusContainer}\n        </div>\n    </Paper>\n}\n\nfunction App() {\n    const classes = useStyles();\n\n    return (\n        <div className=\"App\">\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        测距\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Container maxWidth=\"lg\">\n                <StatusPanel/>\n            </Container>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}